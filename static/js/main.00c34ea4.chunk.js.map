{"version":3,"sources":["components/Footer/Footer.module.css","components/NavBar/NavBar.module.css","components/WarningMessage/WarningMessage.module.css","images/GreyBox.svg","components/NavBar/NavBar.js","components/Footer/Footer.js","components/Blank/Blank.js","components/List/ListItem.js","components/List/ModelSelector.js","components/List/Form.js","components/WarningMessage/WarningMessage.js","constants.js","components/List/TokenChooser.js","components/List/List.js","components/Grid/GridItem.js","components/Grid/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","footer","title","description","footerlink","skipLink","warningPosition","__webpack_require__","p","NavBar","react_default","a","createElement","Fragment","className","styles","href","react_router_dom","to","role","aria-level","Footer","target","Blank","id","ListItem","_ref","item","deleteItem","text","response","split","map","line","index","key","type","data-dismiss","aria-label","alt","onClick","aria-hidden","models","ModelSelector","onModelChange","_useState","useState","_useState2","Object","slicedToArray","selectedModel","setSelectedModel","value","onChange","e","model","Form","params","textField","setTextField","onSubmit","preventDefault","addItem","name","placeholder","WarningMessage","open","onWarningClose","classnames","ENDPOINT","ERROR_MESSAGE","TokenChooser","numberOfTokens","setNumberOfTokens","options","Array","from","length","_","i","num","event","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","require","config","_require","Configuration","openai","OpenAIApi","apiKey","process","idNum","List","items","setItems","_useState3","warningMessageOpen","warningMessageText","_useState4","warningMessage","setWarningMessage","_useState5","_useState6","_useState7","_useState8","console","log","asyncToGenerator","_callee","itemAdded","_context","createCompletion","prompt","temperature","max_tokens","data","choices","concat","toConsumableArray","_x","apply","arguments","List_Form","style","marginBottom","List_ModelSelector","List_TokenChooser","handleChange","token","listItem","List_ListItem","components_WarningMessage_WarningMessage","GridItem","src","ImgGreyBox","header","shortDescription","Grid","React","useEffect","fetch","ok","statusText","json","newItems","Grid_GridItem","App","components_NavBar_NavBar","react_router","exact","path","component","components_Footer_Footer","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.00c34ea4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__24AtN\",\"title\":\"Footer_title__1FLQb\",\"description\":\"Footer_description__3LVMB\",\"footerlink\":\"Footer_footerlink__WfOgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"NavBar_skipLink__29d8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningPosition\":\"WarningMessage_warningPosition__1rgtT\"};","module.exports = __webpack_public_path__ + \"static/media/GreyBox.4d3d89fb.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./NavBar.module.css\";\n\n//TODO Web Template Studio: Add a new link in the NavBar for your page here.\n// A skip link is included as an accessibility best practice. For more information visit https://www.w3.org/WAI/WCAG21/Techniques/general/G1.\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.skipLink}>\n        <a href=\"#mainContent\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\" role=\"heading\" aria-level=\"1\">\n          Chat-GPT-Aulternative\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link active\" to=\"Chat-GPT-Aulternative\">\n            Home\n          </Link>\n          <Link className=\"nav-item nav-link active\" to=\"Questions\">\n            Questions\n          </Link>\n          {/* <Link className=\"nav-item nav-link active\" to=\"Grid\">\n            Grid\n          </Link> */}\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n}\nexport default NavBar;\n","import React from \"react\";\r\nimport styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-around\">\r\n          <div className=\"col-8 col-md-5\">\r\n            <h5 className={styles.title}>Chat-GPT-Aulternative</h5>\r\n            <p className={styles.description}>\r\n              Premium Chat-GPT for high volume times.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a className={styles.footerlink} href=\"https://chat.openai.com/chat\" target=\"_blank\">\r\n                  Chat-GPT\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/Questions\">\r\n                  Chat-GPT-Aulternative\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React from \"react\";\r\n\r\nconst Blank = () => {\r\n  return <main id=\"mainContent\">\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center mt-5 p-0\">\r\n        <h3>Chat-GPT-Aulternative</h3>\r\n      </div>\r\n      <div>\r\n                <p>To access Chat-GPT functionality, go to the questions tab. There you will be prompted to ask questions. Please note that these questions will not be saved after your session is over.</p>\r\n                <b>This is only intended to be used when a session cannot be accessed due to high traffic</b>\r\n      </div>\r\n    </div>\r\n  </main>\r\n}\r\nexport default Blank;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListItem = ({ item, deleteItem }) => {\r\n  return (\r\n    <div className=\"col-12 mb-3 border\">\r\n      <div className=\"row\">\r\n        <div className=\"col-11\">\r\n          <b className=\"mt-3\">{item.text}</b>\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <p>{item.response.split(\"\\n\").map((line, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                {line}\r\n                <br />\r\n              </React.Fragment>\r\n            );\r\n          })}</p>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close py-2\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"delete\"\r\n            alt=\"delete\"\r\n            onClick={() => deleteItem(item)}\r\n          >\r\n            <div aria-hidden=\"true\">&times;</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  item: PropTypes.any,\r\n  deleteItem: PropTypes.func\r\n}\r\n\r\nexport default ListItem;","import React, { useState } from \"react\";\n\nconst models = [\"davinci\", \"curie\", \"babbage\", \"jules\", \"ada\"];\nconst modelKey = {\"davinci\": \"text-davinci-002\", \"curie\":\"text-curie-002\", \"babbage\":\"text-babbage-002\"}\n\nfunction ModelSelector({ onModelChange }) {\n  const [selectedModel, setSelectedModel] = useState(\"davinci\");\n\n  function handleModelChange(e) {\n    setSelectedModel(e.target.value);\n    onModelChange(e.target.value);\n  }\n\n  return (\n    <select value={selectedModel} onChange={handleModelChange}>\n      {models.map(model => (\n        <option key={model} value={model}>\n          {model}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default ModelSelector;","import React, { useState } from 'react';\r\n\r\nconst Form = (params) =>{\r\n  const [textField, setTextField] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTextField(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    params.addItem(textField);\r\n    setTextField(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"input-group my-3\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        value={textField}\r\n        name=\"textField\"\r\n        className=\"form-control\"\r\n        placeholder=\"Add text here...\"\r\n        aria-label=\"Add text here...\"\r\n      />\r\n      <button type=\"submit\" className=\"btn btn-primary ml-2\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./WarningMessage.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// A pop up message used to warn users about failed API calls to the back end\r\nconst WarningMessage = ({ open, text, onWarningClose }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {open && (\r\n        <div\r\n          className={classnames(\r\n            \"alert\",\r\n            \"alert-warning\",\r\n            \"ml-3\",\r\n            styles.warningPosition\r\n          )}\r\n          role=\"alert\"\r\n        >\r\n          {text}\r\n          <button\r\n            onClick={onWarningClose}\r\n            className=\"close ml-2\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWarningMessage.propTypes = {\r\n  open: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  onWarningClose:PropTypes.func\r\n}\r\n\r\nexport default WarningMessage;","const ENDPOINT = {\n  GRID: \"/api/grid\",\n  LIST: \"/api/list\",\n};\n\nconst ERROR_MESSAGE = {\n  GRID_GET: \"Request to get grid text failed:\",\n  LIST_DELETE: \"Request to delete list item failed:\",\n  LIST_ADD: \"Request to add list item failed:\",\n  LIST_GET: \"Request to get list items failed:\",\n  LIST_EMPTY_MESSAGE: \"Please enter a valid message\",\n};\n\nexport {ENDPOINT, ERROR_MESSAGE};\n","import React, { useState } from 'react';\n\nfunction TokenChooser() {\n  const [numberOfTokens, setNumberOfTokens] = useState(0);\n\n  const handleChange = (event) => {\n    setNumberOfTokens(event.target.value);\n  };\n\n  const options = Array.from({ length: 11 }, (_, i) => i * 100).map((num) => {\n    return <option key={num} value={num}>{num}</option>;\n  });\n\n  return (\n      <select id=\"token-select\" value={numberOfTokens} onChange={handleChange}>\n        {options}\n      </select>\n  );\n}\n\nexport default TokenChooser;","import React, { useState } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport ModelSelector from \"./ModelSelector\";\r\nimport Form from \"./Form\";\r\nimport WarningMessage from \"../WarningMessage/WarningMessage\";\r\nimport { ERROR_MESSAGE } from \"../../constants\";\r\nimport TokenChooser from \"./TokenChooser\"\r\n\r\nrequire(\"dotenv\").config();\r\nconst { Configuration, OpenAIApi } = require(\"openai\");\r\nconst configuration = new Configuration({\r\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY\r\n});\r\n\r\nconst openai = new OpenAIApi(configuration);\r\nvar idNum = 0;\r\nconst List = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [warningMessage, setWarningMessage] = useState({warningMessageOpen: false, warningMessageText: \"\"});\r\n  const [selectedModel, setSelectedModel] = useState(\"davinci\");\r\n  const [numberOfTokens, setNumberOfTokens] = useState(1000)\r\n\r\n  // const getItems = () => {\r\n  //   // let promiseList = fetch(ENDPOINT.LIST)\r\n  //   //   .then(response => {\r\n  //   //     if (!response.ok) {\r\n  //   //       throw Error(response.statusText);\r\n  //   //     }\r\n  //   //     return response.json();\r\n  //   //   })\r\n  //   // return promiseList;\r\n  //   return [];\r\n  // }\r\n\r\n  function handleModelChange(model) {\r\n    setSelectedModel(model);\r\n  }\r\n  function handleTokenChange(token){\r\n    setNumberOfTokens(token);\r\n  }\r\n\r\n  const deleteItem = (item) => {\r\n    console.log(item.text);\r\n    // fetch(`${ENDPOINT.LIST}/${item.id}`, { method: \"DELETE\" })\r\n    //   .then(response => {\r\n    //     if (!response.ok) {\r\n    //       throw Error(response.statusText);\r\n    //     }\r\n    //     return response.json();\r\n    //   })\r\n    //   .then(result => {\r\n    //     setItems(items.filter(item => item.id !== result.id));\r\n    //   })\r\n    //   .catch(error => {\r\n    //     setWarningMessage({\r\n    //       warningMessageOpen: true,\r\n    //       warningMessageText: `${ERROR_MESSAGE.LIST_DELETE} ${error}`\r\n    //     });\r\n    //   });\r\n  }\r\n\r\n  const addItem = async (textField) => {\r\n    // Warning Pop Up if the user submits an empty message\r\n    if (!textField) {\r\n      setWarningMessage({\r\n        warningMessageOpen: true,\r\n        warningMessageText: ERROR_MESSAGE.LIST_EMPTY_MESSAGE\r\n      });\r\n      return;\r\n    }\r\n    \r\n    console.log('getting response');\r\n    const response = await openai.createCompletion({\r\n      model: \"text-davinci-003\",\r\n      prompt: textField,\r\n      temperature: 0,\r\n      max_tokens: numberOfTokens,\r\n    });\r\n    console.log(response.data.choices[0].text);\r\n    var itemAdded = {id:idNum, text: textField,  response: response.data.choices[0].text}\r\n    idNum++;\r\n    setItems([itemAdded, ...items]);\r\n\r\n    // setItems([items[0] +, ...items.slice(1,-1)]);\r\n      \r\n    // fetch(ENDPOINT.LIST, {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify({\r\n    //     text: textField\r\n    //   })\r\n    // })\r\n    //   .then(response => {\r\n    //     if (!response.ok) {\r\n    //       throw Error(response.statusText);\r\n    //     }\r\n    //     return response.json();\r\n    //   })\r\n    //   .then(itemAdded =>{\r\n    //     setItems([itemAdded, ...items]);\r\n    //   })\r\n    //   .catch(error =>\r\n    //     setWarningMessage({\r\n    //       warningMessageOpen: true,\r\n    //       warningMessageText: `${ERROR_MESSAGE.LIST_ADD} ${error}`\r\n    //     })\r\n    //   );\r\n  };\r\n\r\n  const closeWarningMessage = () => {\r\n    setWarningMessage({\r\n      warningMessageOpen: false,\r\n      warningMessageText: \"\"\r\n    });\r\n  };\r\n\r\n  // React.useEffect(() => {\r\n  //   getItems()\r\n  //     .then(list => {setItems(list)})\r\n  //     .catch(error =>\r\n  //       setWarningMessage({\r\n  //         warningMessageOpen: true,\r\n  //         warningMessageText: `${ERROR_MESSAGE.LIST_GET} ${error}`\r\n  //       })\r\n  //     );\r\n  // }, []);\r\n\r\n  return (\r\n    <main id=\"mainContent\" className=\"container\">\r\n      <div className=\"row justify-content-center py-5\">\r\n        <h3>Question List</h3>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 p-0\">\r\n          <Form addItem={addItem}/>\r\n        </div>\r\n        \r\n          <div style={{marginBottom: '20px'}}>\r\n            <ModelSelector onModelChange={handleModelChange} />\r\n            <TokenChooser handleChange={handleTokenChange} />\r\n          </div>\r\n        \r\n\r\n        {items.map(listItem => (\r\n          <ListItem\r\n            key={listItem.id}\r\n            item={listItem}\r\n            deleteItem={deleteItem}\r\n          />\r\n        ))}\r\n        <WarningMessage\r\n          open={warningMessage.warningMessageOpen}\r\n          text={warningMessage.warningMessageText}\r\n          onWarningClose={closeWarningMessage}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport ImgGreyBox from \"../../images/GreyBox.svg\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GridItem = ({ item }) => {\r\n  return (\r\n    <div className=\"col-md-4 col-sm-12 p-5\">\r\n      <img src={ImgGreyBox} alt=\"Default Grey Box\" className=\"mb-3\" />\r\n      <h3>{item.header}</h3>\r\n      <p>{item.shortDescription}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  item: PropTypes.any\r\n}\r\n\r\nexport default GridItem;","import React, { useState } from \"react\";\r\nimport WarningMessage from \"../WarningMessage/WarningMessage\";\r\nimport { ENDPOINT } from \"../../constants\";\r\nimport GridItem from \"./GridItem\";\r\n\r\nconst Grid = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [warningMessage, setWarningMessage] = useState({warningMessageOpen: false, warningMessageText: \"\"});\r\n\r\n  const getItems = () => {\r\n    const promiseItems = fetch(ENDPOINT.GRID)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    });\r\n\r\n    return promiseItems;\r\n  }\r\n  const closeWarningMessage = () => {\r\n    setWarningMessage({\r\n      warningMessageOpen: false,\r\n      warningMessageText: \"\"\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getItems()\r\n    .then(newItems => {setItems(newItems)})\r\n    .catch(error =>\r\n      setWarningMessage({\r\n        warningMessageOpen: true,\r\n        warningMessageText: `Request to get grid text failed: ${error}`\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <main id=\"mainContent\">\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-5 p-0\">\r\n          <h3>Grid</h3>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-around text-center pb-5\">\r\n          {items.map(item => (\r\n            <GridItem\r\n            key={item.id}\r\n            item={item}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <WarningMessage\r\n        open={warningMessage.warningMessageOpen}\r\n        text={warningMessage.warningMessageText}\r\n        onWarningClose={closeWarningMessage}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Grid;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Footer from \"./components/Footer/Footer\";\n\nimport Blank from \"./components/Blank/Blank\";\n\nimport List from \"./components/List/List\";\n\nimport Grid from \"./components/Grid/Grid\";\n\n//TODO Web Template Studio: Add routes for your new pages here.\n\nconst App = () => {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <Switch>\n          <Route exact path = \"/Chat-GPT-Aulternative\" component = { Blank } />\n          <Route path = \"/Chat-GPT-Aulternative/Questions\" component = { List } />\n          <Route path = \"/Chat-GPT-Aulternative/Grid\" component = { Grid } />\n        </Switch>\n        <Footer />\n      </React.Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}